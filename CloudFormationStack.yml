AWSTemplateFormatVersion: '2010-09-09'
Description: Template for 444noresponse.com Platform 

Parameters:
  AvailabilityZone:
    Type: String
    Default: eu-central-1a

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: 444noresponse.com

  SubnetAPublic:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Ref AvailabilityZone
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: 444noresponse.com
          
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    DependsOn: VPC
    Properties:
      Tags:
        - Key: Name
          Value:  444noresponse.com

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
      
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: 444noresponse.com

  PublicRoute1:             
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  SubnetAPublicRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetAPublic
      RouteTableId: !Ref PublicRouteTable

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH, HTTP n HTTPS access for application
      VpcId: !Ref VPC
      Tags: 
        - Key: Name
          Value: 444noresponse.com
      SecurityGroupIngress: 
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        # 8080 port for phpmyadmin,securyty reason 
        # - IpProtocol: tcp
        #   FromPort: 8080
        #   ToPort: 8080
        #   CidrIp: 0.0.0.0/0  
        # Allow to ping server
        # - IpProtocol: icmp
        #   FromPort: -1
        #   ToPort: -1
        #   CidrIp: 0.0.0.0/0   

  ec2:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: !Ref AvailabilityZone
      SubnetId: !Ref SubnetAPublic
      # ImageId: ami-0d527b8c289b4af7f  #Ubuntu 20.04 eu-central-1
      ImageId: ami-0caef02b518350c8b  #Ubuntu 22.04 eu-central-1
      InstanceType: t2.micro
      KeyName: awsdjole
      BlockDeviceMappings:
        - DeviceName: '/dev/sda1'
          Ebs:
            VolumeSize: 20 # in GB
            VolumeType: gp2
      SecurityGroupIds: 
        - !Ref SecurityGroup
      UserData:
        Fn::Base64: 
          !Sub |
            #!/bin/bash  
            # Install Docker
            apt-get update
            apt-get install -y apt-transport-https ca-certificates curl software-properties-common
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
            add-apt-repository \
              "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
              $(lsb_release -cs) \
              stable"
            apt-get update
            apt-get install -y docker-ce
            usermod -aG docker ubuntu
            # Install docker-compose
            # prev-version docker-compose 1.21.0
            curl -L https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
            chmod +x /usr/local/bin/docker-compose
      Tags:
        - Key: Name
          Value: 444noresponse.com    